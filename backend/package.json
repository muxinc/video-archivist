{
  "name": "@playbackproblems/backend",
  "version": "0.1.0",
  "main": "dist",
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "dev:connect-db": "cd .. && yarn run -s dev:connect-db",
    "build": "tsc",
    "clean": "rm -rf ./dist",
    "start:http": "node dist/run-http.ts",
    "start:http:dev": "tsc-watch -p tsconfig.json --onSuccess \"node dist/run-http.js\"",
    "start:jobs": "node dist/run-jobs.ts",
    "start:jobs:dev": "tsc-watch -p tsconfig.json --onSuccess \"node dist/run-jobs.js\"",
    "test": "jest",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/.bin/typeorm"
  },
  "devDependencies": {
    "@types/bull": "^3.14.2",
    "@types/getenv": "^1.0.0",
    "@types/hapi-pino": "^8.0.0",
    "@types/hapi__hapi": "^20.0.0",
    "@types/hapi__inert": "^5.2.0",
    "@types/hapi__vision": "^5.5.1",
    "@types/ioredis": "^4.17.4",
    "@types/jest": "^26.0.14",
    "@types/lodash": "^4.14.161",
    "@types/node": "^14.10.3",
    "@types/pino": "^6.3.0",
    "@types/uuid": "^8.3.0",
    "jest": "^26.5.3",
    "ts-jest": "^26.4.1",
    "ts-node": "^9.0.0",
    "tsc-watch": "^4.2.9",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.0.2"
  },
  "dependencies": {
    "@google-cloud/storage": "^5.3.0",
    "@hapi/hapi": "^20.0.0",
    "@hapi/inert": "^6.0.2",
    "@hapi/vision": "^6.0.1",
    "@octokit/rest": "^18.0.6",
    "@octokit/webhooks": "^7.11.3",
    "axios": "^0.20.0",
    "buffer-equal-constant-time": "^1.0.1",
    "bull": "^3.18.0",
    "getenv": "^1.0.0",
    "hapi-pino": "^8.3.0",
    "hapi-swagger": "^14.0.0",
    "hapi-typeorm": "^0.3.2",
    "hapi-x-request-id": "^1.1.2",
    "hashids": "^2.2.1",
    "joi": "^17.2.1",
    "lodash": "^4.17.20",
    "pg": "^8.3.3",
    "pino": "^6.6.1",
    "reflect-metadata": "^0.1.13",
    "runtypes": "^5.0.1",
    "sleep-promise": "^8.0.1",
    "source-map-support": "^0.5.19",
    "typeorm": "^0.2.26",
    "typeorm-naming-strategies": "^2.0.0",
    "uuid": "^8.3.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts",
      "tsx"
    ],
    "rootDir": ".",
    "testRegex": ".spec.ts$",
    "transform": {
      ".+\\.(ts|js|tsx|jsx)$": "ts-jest"
    },
    "globals": {
      "ts-jest": {
        "tsConfig": "tsconfig.test.json"
      }
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
